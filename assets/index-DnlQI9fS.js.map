{"version":3,"file":"index-DnlQI9fS.js","sources":["../../src/styles/colors.tsx","../../src/LaptopScreen/LaptopScreen.tsx","../../src/Name.tsx","../../src/PortfolioControl.tsx","../../src/StickyNotes.tsx","../../src/Interactables/Interactables.tsx","../../src/Particles/Particles.tsx","../../src/Experience.tsx","../../src/Guide.tsx","../../src/Credit.tsx","../../src/index.jsx"],"sourcesContent":["/**\n *  $primary-color: #a8bdc3;\n    $secondary-color: #cfe7d7;\n    $accent-color: #d7a9a1;\n    $text-primary-color: #393533;\n    $text-secondary-color: #9ba3a7;\n    $highlight-color: #e4e1dc;\n */\nexport const COLORS = {\n  PRIMARY_COLOR: \"#a8bdc3\",\n  SECONDARY_COLOR: \"#cfe7d7\",\n  ACCENT_COLOR: \"#d7a9a1\",\n  TEXT_PRIMARY_COLOR: \"#393533\",\n  TEXT_SECONDARY_COLOR: \"#9ba3a7\",\n  HIGHLIGHT_COLOR: \"#e4e1dc\",\n};\n","import { Html, Text } from \"@react-three/drei\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Desktop from \"../Desktop/Desktop\";\nimport pointerEvents from \"../utils/pointerEvents\";\nimport { FONTS } from \"../assets\";\nimport { COLORS } from \"../styles/colors\";\nimport { FocusDeviceContext } from \"../providers/FocusDeviceProvider\";\n\nconst powerButtonColors = {\n  OFF: \"#c91131\",\n  ON: \"#393533\",\n};\n\nexport default function LaptopScreen(props: {\n  isLaptopOn: boolean;\n  setIsLaptopOn: (isLaptopOn: boolean) => void;\n  onLaptopOn?: () => void;\n  onLaptopOff?: () => void;\n}) {\n  const { isLaptopOn, setIsLaptopOn, onLaptopOff, onLaptopOn } = props;\n  const [buttonColor, setButtonColor] = useState(powerButtonColors.OFF);\n  const bootSound = new Audio(\"sfx/boot-sound.m4a\");\n  bootSound.volume = 0.5;\n  const clickSound = new Audio(\"sfx/keyboard-click.wav\");\n\n  useEffect(() => {\n    if (isLaptopOn) {\n      onLaptopOn?.();\n    } else {\n      onLaptopOff?.();\n    }\n  }, [isLaptopOn, onLaptopOff, onLaptopOn]);\n\n  const focusDeviceContext = useContext(FocusDeviceContext);\n\n  return (\n    <group position-y={-1.5}>\n      <mesh\n        position={[1.177, 0.51, -0.82]}\n        scale={[0.04, 0.04, 0.04]}\n        {...pointerEvents}\n        onClick={(e) => {\n          clickSound.play();\n          setButtonColor(\n            isLaptopOn ? powerButtonColors.OFF : powerButtonColors.ON\n          );\n          e.stopPropagation();\n          if (!isLaptopOn) {\n            bootSound.play();\n          }\n\n          setIsLaptopOn(!isLaptopOn);\n        }}\n        name=\"powerButton\"\n      >\n        <cylinderGeometry />\n        <meshBasicMaterial color={buttonColor} />\n      </mesh>\n\n      <Text\n        visible={!isLaptopOn}\n        font={FONTS.INDIE_FLOWER_TTF}\n        scale={0.1}\n        position={[1, 0.53, -0.58]}\n        rotation={[-Math.PI / 2, 0, 0]}\n        maxWidth={5}\n        color={COLORS.SECONDARY_COLOR}\n      >\n        Press &rarr; here to turn on the laptop\n      </Text>\n      {isLaptopOn && (\n        <Html\n          occlude={\"blending\"}\n          zIndexRange={[100, 0]}\n          transform\n          wrapperClass=\"htmlPortfolio\"\n          distanceFactor={0.94}\n          position={[0, 1.57, -1.42]}\n          rotation-x={-0.256}\n          receiveShadow\n        >\n          <FocusDeviceContext.Provider value={focusDeviceContext}>\n            <Desktop />\n          </FocusDeviceContext.Provider>\n        </Html>\n      )}\n    </group>\n  );\n}\n","import { animated, config, useSpring } from \"@react-spring/three\";\nimport { Text3D, useMatcapTexture } from \"@react-three/drei\";\nimport React, { Suspense, useEffect } from \"react\";\nimport pointerEvents from \"./utils/pointerEvents\";\nimport { FONTS } from \"./assets\";\n\nexport default function Name() {\n  const matcapTexture = useMatcapTexture(\"6D6D6D_3E3E3E_C0C0C0_949494\", 256);\n  const lightMatCapTexture = useMatcapTexture(\n    \"6EC66E_C9F8C9_A3E8A3_B4F1B4\",\n    256\n  );\n  const lightSwitchSound = new Audio(\"sfx/light-switch.m4a\");\n  const [isFirstNameOn, setIsFirstNameOn] = React.useState(false);\n  const [isLastNameOn, setIsLastNameOn] = React.useState(false);\n\n  const [spring, api] = useSpring(() => ({\n    firstNameMatcap: matcapTexture[0],\n    lastNameMatCap: matcapTexture[0],\n    config: config.wobbly,\n  }));\n\n  useEffect(() => {\n    setTimeout(() => {\n      const firstNameCheckInterval = setInterval(() => {\n        api.start({\n          firstNameMatcap: lightMatCapTexture[0],\n        });\n        api.start({\n          lastNameMatCap: matcapTexture[0],\n        });\n      }, 500);\n\n      const lastNameCheckInterval = setInterval(() => {\n        api.start({\n          firstNameMatcap: matcapTexture[0],\n        });\n        api.start({\n          lastNameMatCap: lightMatCapTexture[0],\n        });\n      }, 1000);\n\n      setTimeout(() => {\n        api.start({\n          lastNameMatCap: matcapTexture[0],\n        });\n        clearInterval(firstNameCheckInterval);\n        clearInterval(lastNameCheckInterval);\n      }, 2400);\n    }, 3 * 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Suspense>\n      <Text3D\n        font={FONTS.SILKSCREEN_JSON}\n        size={0.4}\n        height={0.1}\n        position={[-1.7, -0.9, 0.8]}\n        rotation-x={-0}\n        rotation-y={1.6}\n        curveSegments={12}\n        bevelEnabled\n        bevelSize={0.01}\n        bevelThickness={0.01}\n        letterSpacing={-0.05}\n        onClick={(e) => {\n          e.stopPropagation();\n          lightSwitchSound.play();\n          api.start({\n            firstNameMatcap: isFirstNameOn\n              ? matcapTexture[0]\n              : lightMatCapTexture[0],\n          });\n          setIsFirstNameOn(!isFirstNameOn);\n        }}\n        {...pointerEvents}\n      >\n        Rizki\n        <animated.meshMatcapMaterial matcap={spring.firstNameMatcap} />\n      </Text3D>\n      {/* <rectAreaLight\n        width={2}\n        height={1.5}\n        intensity={30}\n        color={\"#BECFA5\"}\n        rotation={[0, -Math.PI / 2, 0]}\n        position={[-1.8, -1.4, 0]}\n      /> */}\n\n      <Text3D\n        font={FONTS.SILKSCREEN_JSON}\n        size={0.32}\n        height={0.07}\n        position={[-1.45, -1.04, 1.5]}\n        rotation-x={-Math.PI / 2}\n        rotation-y={0}\n        curveSegments={12}\n        bevelEnabled\n        bevelSize={0.01}\n        bevelThickness={0.01}\n        letterSpacing={-0.05}\n        onClick={(e) => {\n          e.stopPropagation();\n          lightSwitchSound.play();\n          api.start({\n            lastNameMatCap: isLastNameOn\n              ? matcapTexture[0]\n              : lightMatCapTexture[0],\n          });\n          setIsLastNameOn(!isLastNameOn);\n        }}\n        {...pointerEvents}\n      >\n        Fikriansyah\n        <animated.meshMatcapMaterial matcap={spring.lastNameMatCap} />\n      </Text3D>\n    </Suspense>\n  );\n}\n","import { OrbitControls, OrbitControlsProps } from \"@react-three/drei\";\nimport { clamp } from \"three/src/math/MathUtils.js\";\nimport { useContext, useEffect, useRef } from \"react\";\nimport { OrbitControls as OrbitControlsImpl } from \"three-stdlib\";\nimport {\n  FocusDeviceContext,\n  FocusDeviceContextType,\n} from \"./providers/FocusDeviceProvider\";\n\nexport type FocusPoint = {\n  target: [x: number, y: number, z: number];\n  azimuthAngle: number;\n  polarAngle: number;\n  minDistance: number;\n\n  /**\n   * if empty or undefined, it will be set to `minDistance + 0.2`\n   */\n  maxDistance?: number;\n  /**\n   * Rotation, pan, and zoom speed\n   * @default 2\n   */\n  speed?: number;\n  /**\n   * whether to enable controls\n   * @default false\n   */\n  enabled?: boolean;\n};\n\nconst defaultFocusPoint: FocusPoint & {\n  maxDistance: number;\n  speed: number;\n} = {\n  target: [-0.8, 0.2, -0.5],\n  azimuthAngle: 0.6,\n  polarAngle: 1.24,\n  minDistance: 2,\n  maxDistance: 7,\n  speed: 0.5,\n  enabled: true,\n};\n\ntype PortfolioControlProps = OrbitControlsProps;\n\nexport default function PortfolioControl({ ...props }: PortfolioControlProps) {\n  const { focusPoint } = useContext<FocusDeviceContextType>(FocusDeviceContext);\n\n  const setFocusPoint = (focus?: FocusPoint) => {\n    if (!controlsRef.current) {\n      return;\n    }\n\n    const focusPoint = focus ?? defaultFocusPoint;\n    focusPoint.speed = focusPoint.speed ?? 2;\n    focusPoint.maxDistance =\n      focusPoint.maxDistance ?? focusPoint.minDistance + 0.2;\n\n    controlsRef.current.enablePan = !!focusPoint?.enabled;\n    controlsRef.current.enableZoom = !!focusPoint?.enabled;\n    controlsRef.current.enableRotate = !!focusPoint?.enabled;\n    controlsRef.current.target.set(...focusPoint.target);\n    controlsRef.current.setAzimuthalAngle(focusPoint.azimuthAngle);\n    controlsRef.current.setPolarAngle(focusPoint.polarAngle);\n    controlsRef.current.rotateSpeed = focusPoint.speed;\n    controlsRef.current.panSpeed = focusPoint.speed;\n    controlsRef.current.zoomSpeed = focusPoint.speed;\n    controlsRef.current.maxDistance = focusPoint.maxDistance;\n    controlsRef.current.minDistance = focusPoint.minDistance;\n  };\n\n  useEffect(() => {\n    if (!controlsRef.current) {\n      return;\n    }\n\n    if (focusPoint) {\n      setFocusPoint(focusPoint);\n    } else {\n      // set camera to furthest point\n      // before setting the default focus point\n      controlsRef.current.minDistance = defaultFocusPoint.maxDistance;\n      setFocusPoint();\n    }\n  }, [focusPoint]);\n\n  const controlsRef = useRef<OrbitControlsImpl>(null);\n\n  return (\n    <>\n      <OrbitControls\n        ref={controlsRef}\n        makeDefault\n        minAzimuthAngle={-Math.PI / 4}\n        maxAzimuthAngle={Math.PI / 2}\n        minPolarAngle={Math.PI / 4}\n        maxPolarAngle={Math.PI / 2}\n        dampingFactor={0.1}\n        enablePan={true}\n        enableZoom={true}\n        maxDistance={defaultFocusPoint.maxDistance}\n        minDistance={defaultFocusPoint.minDistance}\n        rotateSpeed={defaultFocusPoint.speed}\n        panSpeed={defaultFocusPoint.speed}\n        zoomSpeed={defaultFocusPoint.speed}\n        // to debug camera position\n        // onEnd={() => {\n        //   console.log({\n        //     target: controlsRef.current?.target,\n        //     azimuth: controlsRef.current?.getAzimuthalAngle(),\n        //     polar: controlsRef.current?.getPolarAngle(),\n        //     zoom: controlsRef.current?.getDistance(),\n        //     a: controlsRef.current?.dampingFactor,\n        //   });\n        // }}\n        onChange={\n          // limit panning\n          () => {\n            const target = controlsRef.current?.target;\n\n            if (!target) {\n              return;\n            }\n\n            const targetX = clamp(target.x, -1, 1);\n            const targetY = clamp(target.y, -1, 1);\n            const targetZ = clamp(target.z, -1, 1);\n\n            target.setX(targetX);\n            target.setY(targetY);\n            target.setZ(targetZ);\n          }\n        }\n        {...props}\n      />\n    </>\n  );\n}\n","import { Text } from \"@react-three/drei\";\nimport React from \"react\";\nimport { animated, easings, useSpring } from \"@react-spring/three\";\nimport pointerEvents from \"./utils/pointerEvents\";\nimport { FONTS } from \"./assets\";\n\nexport default function StickyNotes() {\n  const [isSocialMediaNoteRevealed, setIsSocialMediaNoteRevealed] =\n    React.useState(false);\n\n  const [spring, springApi] = useSpring(() => ({\n    position: [2.26, -1.04, 0.6],\n\n    config: {\n      mass: 1,\n      tension: 170,\n      friction: 26,\n      duration: 500,\n      easing: easings.easeOutSine,\n    },\n  }));\n\n  const handleSocialMediaNoteClick = () => {\n    if (isSocialMediaNoteRevealed) {\n      springApi.start({\n        position: [2.93, -1.03, 0.7],\n      });\n    } else {\n      springApi.start({\n        position: [2.26, -1.03, 0.6],\n      });\n    }\n\n    setIsSocialMediaNoteRevealed(!isSocialMediaNoteRevealed);\n  };\n\n  return (\n    <>\n      <group position={[1.25, -0.98, 0.7]} rotation-y={-0.2}>\n        <mesh scale={[0.7, 0.01, 0.8]}>\n          <boxGeometry />\n          <meshBasicMaterial color={\"#C0B375\"} />\n        </mesh>\n        <Text\n          font={FONTS.INDIE_FLOWER_TTF}\n          fontSize={0.08}\n          position={[0.04, 0.01, 0]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          color={\"#393533\"}\n          maxWidth={0.6}\n        >\n          Turn off the laptop after use. It's that red button on the right.\n        </Text>\n      </group>\n\n      <animated.group\n        position={spring.position.to((x, y, z) => [x, y, z])}\n        rotation-y={0.3}\n        onClick={handleSocialMediaNoteClick}\n        {...pointerEvents}\n      >\n        <mesh scale={[0.7, 0.01, 0.8]}>\n          <boxGeometry />\n          <meshBasicMaterial color={\"#C0B375\"} />\n        </mesh>\n        <Text\n          font={FONTS.INDIE_FLOWER_TTF}\n          fontSize={0.09}\n          position={[0.02, 0.01, 0]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          color={\"#393533\"}\n          maxWidth={0.6}\n        >\n          Got a project in mind? I’m all ears and ready to connect.\n        </Text>\n      </animated.group>\n    </>\n  );\n}\n","import LaptopScreen from \"../LaptopScreen/LaptopScreen\";\nimport Macbook from \"../Models/Macbook\";\nimport Name from \"../Name\";\nimport PhoneScreen from \"../PhoneScreen/PhoneScreen\";\nimport PortfolioControl, { FocusPoint } from \"../PortfolioControl\";\nimport StickyNotes from \"../StickyNotes\";\nimport { useContext } from \"react\";\nimport { FocusDeviceContext } from \"../providers/FocusDeviceProvider\";\n\nconst laptopFocusPoint: FocusPoint = {\n  target: [-0.239, 0.146, -0.386],\n  azimuthAngle: 0.033,\n  polarAngle: 1.313,\n  minDistance: 1.8,\n\n  // for debugging set this to true\n  // enabled: true,\n};\n\nconst Interactables = () => {\n  const { isMacbookOn, setIsMacbookOn, setFocusPoint } =\n    useContext(FocusDeviceContext);\n\n  return (\n    <>\n      <PortfolioControl />\n      <Macbook\n        castShadow\n        isInteractionEnabled={!isMacbookOn}\n        position-y={-1.5}\n      />\n      <LaptopScreen\n        isLaptopOn={isMacbookOn}\n        setIsLaptopOn={(isLaptopOn) => {\n          setIsMacbookOn(isLaptopOn);\n          setFocusPoint(isLaptopOn ? laptopFocusPoint : undefined);\n        }}\n      />\n\n      <PhoneScreen />\n      <StickyNotes />\n      <Name />\n    </>\n  );\n};\n\nexport default Interactables;\n","import { Sparkles } from \"@react-three/drei\";\nimport { useState, useEffect } from \"react\";\n\nconst Particles = () => {\n  const particleSizes = Float32Array.from(\n    { length: 1000 },\n    () => Math.random() * 2\n  );\n\n  const [isShadowReady, setIsShadowReady] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsShadowReady(true);\n    }, 250);\n  });\n\n  return (\n    <>\n      {isShadowReady && (\n        <Sparkles\n          castShadow={false}\n          receiveShadow={false}\n          size={particleSizes}\n          position={[0, 1, 0]}\n          scale={5}\n          count={100}\n          color={\"#FFF5B6\"}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Particles;\n","import { ContactShadows, Environment, SpotLight } from \"@react-three/drei\";\nimport FocusDeviceProvider from \"./providers/FocusDeviceProvider\";\nimport Interactables from \"./Interactables/Interactables\";\nimport { Perf } from \"r3f-perf\";\nimport { isProduction } from \"./utils/isProduction\";\nimport Particles from \"./Particles/Particles\";\n\nexport default function Experience() {\n  const isDevelopment = !isProduction();\n\n  return (\n    <>\n      {isDevelopment && (\n        <Perf openByDefault trackGPU={true} position=\"top-right\" />\n      )}\n      <Environment preset=\"apartment\" />\n      <color args={[\"#1B2128\"]} attach=\"background\" />\n      <SpotLight\n        position={[-4, 5, 0]}\n        angle={0.25}\n        distance={7}\n        attenuation={7}\n        radiusTop={0.8}\n        radiusBottom={2}\n        color={\"#FFF5B6\"}\n        penumbra={0.5}\n        opacity={0.3}\n        anglePower={5}\n      />\n      <ambientLight intensity={1} color={\"#FFF5B6\"} />\n\n      <Particles />\n\n      <FocusDeviceProvider>\n        <Interactables />\n      </FocusDeviceProvider>\n\n      <ContactShadows\n        position-y={-1}\n        opacity={0.5}\n        scale={6}\n        blur={7}\n        far={2}\n        frames={1}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  PiMouseLeftClickFill,\n  PiMouseRightClickFill,\n  PiMouseScrollFill,\n} from \"react-icons/pi\";\nimport { isScreenTouchEnabled } from \"./utils/isScreenTouchEnabled\";\nimport { TbHandTwoFingers } from \"react-icons/tb\";\nimport { MdOutlinePinch, MdOutlineSwipe } from \"react-icons/md\";\n\nexport default function Guide() {\n  const isTouchScreen = isScreenTouchEnabled();\n\n  const guide = isTouchScreen ? (\n    <>\n      <p>\n        <MdOutlineSwipe />: Rotate\n      </p>\n      <p>\n        <TbHandTwoFingers />: Pan\n      </p>\n      <p>\n        <MdOutlinePinch />: Zoom\n      </p>\n    </>\n  ) : (\n    <>\n      <p>\n        <PiMouseLeftClickFill />: Rotate\n      </p>\n      <p>\n        <PiMouseRightClickFill />: Pan\n      </p>\n      <p>\n        <PiMouseScrollFill />: Zoom\n      </p>\n    </>\n  );\n\n  return <div className=\"guide\">{guide}</div>;\n}\n","import React from \"react\";\n\nexport default function Credit() {\n  return (\n    <div className=\"credit\">\n      <p>(c) 2024 Rizki Fikriansyah</p>\n    </div>\n  );\n}\n","import \"./reset.css\";\nimport \"./style.css\";\nimport ReactDOM from \"react-dom/client\";\nimport { Canvas } from \"@react-three/fiber\";\nimport Experience from \"./Experience\";\nimport Guide from \"./Guide\";\nimport Credit from \"./Credit\";\n\nconst root = ReactDOM.createRoot(document.querySelector(\"#root\"));\n\nroot.render(\n  <>\n    <Guide />\n    <Canvas\n      shadows\n      className=\"portfolio-canvas\"\n      camera={{\n        fov: 50,\n        near: 0.1,\n        far: 1000,\n        position: [0, 1.5, 5],\n      }}\n    >\n      <Experience />\n    </Canvas>\n    <Credit />\n  </>\n);\n"],"names":["COLORS","powerButtonColors","LaptopScreen","props","isLaptopOn","setIsLaptopOn","onLaptopOff","onLaptopOn","buttonColor","setButtonColor","useState","bootSound","clickSound","useEffect","focusDeviceContext","useContext","FocusDeviceContext","jsxs","pointerEvents","e","jsx","Text","FONTS","Html","Desktop","Name","matcapTexture","useMatcapTexture","lightMatCapTexture","lightSwitchSound","isFirstNameOn","setIsFirstNameOn","React","isLastNameOn","setIsLastNameOn","spring","api","useSpring","config","firstNameCheckInterval","lastNameCheckInterval","Suspense","Text3D","animated","defaultFocusPoint","PortfolioControl","focusPoint","setFocusPoint","focus","controlsRef","useRef","Fragment","OrbitControls","target","_a","targetX","clamp","targetY","targetZ","StickyNotes","isSocialMediaNoteRevealed","setIsSocialMediaNoteRevealed","springApi","easings","handleSocialMediaNoteClick","x","y","z","laptopFocusPoint","Interactables","isMacbookOn","setIsMacbookOn","Macbook","PhoneScreen","Particles","particleSizes","isShadowReady","setIsShadowReady","Sparkles","Experience","isDevelopment","isProduction","Environment","SpotLight","FocusDeviceProvider","ContactShadows","Guide","guide","isScreenTouchEnabled","MdOutlineSwipe","TbHandTwoFingers","MdOutlinePinch","PiMouseLeftClickFill","PiMouseRightClickFill","PiMouseScrollFill","Credit","root","ReactDOM","Canvas"],"mappings":"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"}